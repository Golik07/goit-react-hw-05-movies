{"version":3,"file":"static/js/54.8105e68b.chunk.js","mappings":"mQAEaA,EAASC,EAAAA,EAAAA,OAAH,2SAaNC,EAAOD,EAAAA,EAAAA,KAAH,+OAaJE,EAAQF,EAAAA,EAAAA,MAAH,wL,SCTlB,EAjBe,SAAC,GAAuC,IAArCG,EAAoC,EAApCA,MAAOC,EAA6B,EAA7BA,aAAcC,EAAe,EAAfA,SACrC,OACE,0BACE,UAACJ,EAAD,CAAMK,SAAUF,EAAhB,WACE,SAACF,EAAD,CACEK,KAAK,OACLC,KAAK,QACLL,MAAOA,EACPM,YAAY,gBACZJ,SAAU,SAAAK,GAAC,OAAIL,EAASK,EAAEC,OAAOR,MAAtB,KAEb,SAACJ,EAAD,CAAQQ,KAAK,SAAb,wBAIP,E,iBC0CD,EAtDe,WAAO,IAAD,EACnB,GAAwCK,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KACMC,EAAK,UAAGF,EAAaG,IAAI,gBAApB,QAAgC,GAE3C,GAA4BC,EAAAA,EAAAA,UAAS,IAArC,eAAOC,EAAP,KAAeC,EAAf,KACA,GAA0BF,EAAAA,EAAAA,UAASF,GAAgB,IAAnD,eAAOK,EAAP,KAAcC,EAAd,KAEMC,GAAWC,EAAAA,EAAAA,OAEjBC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAkB,mCAAG,gGAElBL,EAFkB,kEAKDM,EAAAA,EAAAA,IAAiBN,GALhB,OAKjBO,EALiB,OAMvBR,EAAUQ,GANa,yGAAH,qDASxBF,GACD,GAAE,CAACL,IAgBJ,OACE,4BACE,SAAC,EAAD,CAAQf,SATc,SAAAuB,GACxB,OACSd,EADO,KAAZc,EACqB,CAAER,MAAO,IAEX,CAAEA,MAAOQ,GACjC,EAIwCxB,aAhBf,SAAAM,GACxBA,EAAEmB,iBACF,IAAMC,EAAOpB,EAAEC,OACfU,EAASN,GACTe,EAAKC,OACN,KAYG,0BACE,wBACGb,EAAOc,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,MAAP,OACV,yBACE,SAAC,KAAD,CAAMC,GAAE,kBAAaF,GAAMG,MAAO,CAAEC,KAAMf,GAA1C,SACGY,KAFID,EADC,UAWrB,C,+LCvDKK,EAAU,mCACVC,EAAW,+BAEJC,EAAY,mCAAG,oGACHC,EAAAA,EAAAA,IAAA,UAClBF,EADkB,uCACqBD,IAFlB,cACpBI,EADoB,yBAInBA,EAASC,KAAKhB,SAJK,2CAAH,qDAOZiB,EAAmB,mCAAG,WAAMX,GAAN,uFACVQ,EAAAA,EAAAA,IAAA,UAClBF,EADkB,kBACAN,EADA,oBACcK,IAFJ,cAC3BI,EAD2B,yBAI1BA,EAASC,MAJiB,2CAAH,sDAOnBjB,EAAgB,mCAAG,WAAMN,GAAN,uFACPqB,EAAAA,EAAAA,IAAA,UAClBF,EADkB,+BACanB,EADb,oBAC8BkB,IAFvB,cACxBI,EADwB,yBAIvBA,EAASC,KAAKhB,SAJS,2CAAH,sDAOhBkB,EAAY,mCAAG,WAAMC,GAAN,uFACHL,EAAAA,EAAAA,IAAA,UAClBF,EADkB,kBACAO,EADA,4BAC4BR,IAFzB,cACpBI,EADoB,yBAInBA,EAASC,KAAKI,MAJK,2CAAH,sDAOZC,EAAY,mCAAG,WAAMF,GAAN,uFACHL,EAAAA,EAAAA,IAAA,UAClBF,EADkB,kBACAO,EADA,4BAC4BR,IAFzB,cACpBI,EADoB,yBAInBA,EAASC,KAAKhB,SAJK,2CAAH,qD","sources":["components/Search/Search.style.js","components/Search/Search.jsx","pages/Movies.jsx","service/api.js"],"sourcesContent":["import styled from '@emotion/styled';\n\nexport const Button = styled.button`\n  background-position: 50%;\n  background-repeat: no-repeat;\n  background-size: 40%;\n  border: 0;\n  cursor: pointer;\n  display: inline-block;\n  height: 48px;\n  opacity: 0.6;\n  outline: none;\n  transition: opacity 0.25s cubic-bezier(0.4, 0, 0.2, 1);\n  width: 100px;\n`;\nexport const Form = styled.form`\nalign-items: center;\n    background-color: #fff;\n    border-radius: 3px;\n    display: flex;\n    max-width: 600px;\n    overflow: hidden;\n    width: 400px;\n    border:1px solid black;\n    margin-left:20px\n}\n`;\n\nexport const Input = styled.input`\n  border: none;\n  display: inline-block;\n  font: inherit;\n  font-size: 20px;\n  outline: none;\n  padding-left: 4px;\n  padding-right: 4px;\n  width: 100%;\n`;\n","import { Button, Form, Input } from './Search.style';\n\nconst Search = ({ value, handleSubmit, onChange }) => {\n  return (\n    <div>\n      <Form onSubmit={handleSubmit}>\n        <Input\n          type=\"text\"\n          name=\"query\"\n          value={value}\n          placeholder=\"Search movies\"\n          onChange={e => onChange(e.target.value)}\n        />\n        <Button type=\"submit\">Search</Button>\n      </Form>\n    </div>\n  );\n};\n\nexport default Search;\n","import { useEffect, useState } from 'react';\nimport { fetchSearchMovie } from '../service/api';\nimport Search from '../components/Search/Search';\nimport { useSearchParams, Link, useLocation } from 'react-router-dom';\n\nconst Movies = () => {\n  const [searchParams, setSearchParams] = useSearchParams();\n  const movie = searchParams.get('query') ?? '';\n\n  const [movies, setMovies] = useState([]);\n  const [query, setQuery] = useState(movie ? movie : '');\n\n  const location = useLocation();\n\n  useEffect(() => {\n    const fetchPopularMovies = async () => {\n      try {\n        if (!query) {\n          return;\n        }\n        const results = await fetchSearchMovie(query);\n        setMovies(results);\n      } catch (error) {}\n    };\n    fetchPopularMovies();\n  }, [query]);\n\n  const handleSubmitMovie = e => {\n    e.preventDefault();\n    const form = e.target;\n    setQuery(movie);\n    form.reset();\n  };\n\n  const updateQueryString = quertys => {\n    if (quertys === '') {\n      return setSearchParams({ query: '' });\n    }\n    return setSearchParams({ query: quertys });\n  };\n\n  return (\n    <div>\n      <Search onChange={updateQueryString} handleSubmit={handleSubmitMovie} />\n      <div>\n        <ul>\n          {movies.map(({ id, title }) => (\n            <li key={id}>\n              <Link to={`/movies/${id}`} state={{ from: location }}>\n                {title}\n              </Link>\n            </li>\n          ))}\n        </ul>\n      </div>\n    </div>\n  );\n};\n\nexport default Movies;\n","import axios from 'axios';\n\nconst API_KEY = 'fe1cf860005fcfafe76308a8ff138918';\nconst BASE_URL = 'https://api.themoviedb.org/3';\n\nexport const fetchPopular = async () => {\n  const response = await axios.get(\n    `${BASE_URL}/trending/movie/day?api_key=${API_KEY}`\n  );\n  return response.data.results;\n};\n\nexport const fetchInfoAboutMovie = async id => {\n  const response = await axios.get(\n    `${BASE_URL}/movie/${id}?api_key=${API_KEY}`\n  );\n  return response.data;\n};\n\nexport const fetchSearchMovie = async query => {\n  const response = await axios.get(\n    `${BASE_URL}/search/movie?query=${query}&api_key=${API_KEY}`\n  );\n  return response.data.results;\n};\n\nexport const fetchCredits = async movie_id => {\n  const response = await axios.get(\n    `${BASE_URL}/movie/${movie_id}/credits?api_key=${API_KEY}`\n  );\n  return response.data.cast;\n};\n\nexport const fetchReviews = async movie_id => {\n  const response = await axios.get(\n    `${BASE_URL}/movie/${movie_id}/reviews?api_key=${API_KEY}`\n  );\n  return response.data.results;\n};\n"],"names":["Button","styled","Form","Input","value","handleSubmit","onChange","onSubmit","type","name","placeholder","e","target","useSearchParams","searchParams","setSearchParams","movie","get","useState","movies","setMovies","query","setQuery","location","useLocation","useEffect","fetchPopularMovies","fetchSearchMovie","results","quertys","preventDefault","form","reset","map","id","title","to","state","from","API_KEY","BASE_URL","fetchPopular","axios","response","data","fetchInfoAboutMovie","fetchCredits","movie_id","cast","fetchReviews"],"sourceRoot":""}