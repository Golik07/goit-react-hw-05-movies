{"version":3,"file":"static/js/186.fa719374.chunk.js","mappings":"yNAuCA,UAnCgB,WACd,OAA8BA,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KACQC,GAAaC,EAAAA,EAAAA,MAAbD,SAaR,OAXAE,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAiB,mCAAG,8GAEEC,EAAAA,EAAAA,IAAaJ,GAFf,OAEhBK,EAFgB,OAGtBN,EAAWM,GACXC,QAAQC,IAAIF,GAJU,yGAAH,qDAOvBF,GACD,GAAE,CAACH,KAGF,+BACE,8BACE,wBACGF,EAAQU,OAAS,EAChBV,EAAQW,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,QAASC,EAAhB,EAAgBA,OAAhB,OACV,2BACE,oCAAYA,MACZ,uBAAID,MAFGD,EADC,KAOZ,0EAMX,C,+LCnCKG,EAAU,mCACVC,EAAW,+BAEJC,EAAY,mCAAG,oGACHC,EAAAA,EAAAA,IAAA,UAClBF,EADkB,uCACqBD,IAFlB,cACpBI,EADoB,yBAInBA,EAASC,KAAKC,SAJK,2CAAH,qDAOZC,EAAmB,mCAAG,WAAMV,GAAN,uFACVM,EAAAA,EAAAA,IAAA,UAClBF,EADkB,kBACAJ,EADA,oBACcG,IAFJ,cAC3BI,EAD2B,yBAI1BA,EAASC,MAJiB,2CAAH,sDAOnBG,EAAgB,mCAAG,WAAMC,GAAN,uFACPN,EAAAA,EAAAA,IAAA,UAClBF,EADkB,+BACaQ,EADb,oBAC8BT,IAFvB,cACxBI,EADwB,yBAIvBA,EAASC,KAAKC,SAJS,2CAAH,sDAOhBI,EAAY,mCAAG,WAAMC,GAAN,uFACHR,EAAAA,EAAAA,IAAA,UAClBF,EADkB,kBACAU,EADA,4BAC4BX,IAFzB,cACpBI,EADoB,yBAInBA,EAASC,KAAKO,MAJK,2CAAH,sDAOZrB,EAAY,mCAAG,WAAMoB,GAAN,uFACHR,EAAAA,EAAAA,IAAA,UAClBF,EADkB,kBACAU,EADA,4BAC4BX,IAFzB,cACpBI,EADoB,yBAInBA,EAASC,KAAKC,SAJK,2CAAH,qD","sources":["components/Reviews/Reviews.jsx","service/api.js"],"sourcesContent":["import { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { fetchReviews } from 'service/api';\n\nconst Reviews = () => {\n  const [reviews, setReviews] = useState([]);\n  const { moviesId } = useParams();\n\n  useEffect(() => {\n    const fetchReviewsValue = async () => {\n      try {\n        const resolutes = await fetchReviews(moviesId);\n        setReviews(resolutes);\n        console.log(resolutes);\n      } catch (error) {}\n    };\n    fetchReviewsValue();\n  }, [moviesId]);\n\n  return (\n    <>\n      <section>\n        <ul>\n          {reviews.length > 0 ? (\n            reviews.map(({ id, content, author }) => (\n              <li key={id}>\n                <h2>Author:{author}</h2>\n                <p>{content}</p>\n              </li>\n            ))\n          ) : (\n            <p>We dont't have any reviews for this movie</p>\n          )}\n        </ul>\n      </section>\n    </>\n  );\n};\n\nexport default Reviews;\n","import axios from 'axios';\n\nconst API_KEY = 'fe1cf860005fcfafe76308a8ff138918';\nconst BASE_URL = 'https://api.themoviedb.org/3';\n\nexport const fetchPopular = async () => {\n  const response = await axios.get(\n    `${BASE_URL}/trending/movie/day?api_key=${API_KEY}`\n  );\n  return response.data.results;\n};\n\nexport const fetchInfoAboutMovie = async id => {\n  const response = await axios.get(\n    `${BASE_URL}/movie/${id}?api_key=${API_KEY}`\n  );\n  return response.data;\n};\n\nexport const fetchSearchMovie = async query => {\n  const response = await axios.get(\n    `${BASE_URL}/search/movie?query=${query}&api_key=${API_KEY}`\n  );\n  return response.data.results;\n};\n\nexport const fetchCredits = async movie_id => {\n  const response = await axios.get(\n    `${BASE_URL}/movie/${movie_id}/credits?api_key=${API_KEY}`\n  );\n  return response.data.cast;\n};\n\nexport const fetchReviews = async movie_id => {\n  const response = await axios.get(\n    `${BASE_URL}/movie/${movie_id}/reviews?api_key=${API_KEY}`\n  );\n  return response.data.results;\n};\n"],"names":["useState","reviews","setReviews","moviesId","useParams","useEffect","fetchReviewsValue","fetchReviews","resolutes","console","log","length","map","id","content","author","API_KEY","BASE_URL","fetchPopular","axios","response","data","results","fetchInfoAboutMovie","fetchSearchMovie","query","fetchCredits","movie_id","cast"],"sourceRoot":""}